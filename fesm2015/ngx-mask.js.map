{"version":3,"file":"ngx-mask.js","sources":["../../../projects/ngx-mask-lib/src/lib/config.ts","../../../projects/ngx-mask-lib/src/lib/mask-applier.service.ts","../../../projects/ngx-mask-lib/src/lib/mask.service.ts","../../../projects/ngx-mask-lib/src/lib/mask.directive.ts","../../../projects/ngx-mask-lib/src/lib/mask.pipe.ts","../../../projects/ngx-mask-lib/src/lib/ngx-mask.module.ts","../../../projects/ngx-mask-lib/src/lib/custom-keyboard-event.ts","../../../projects/ngx-mask-lib/src/ngx-mask.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface IConfig {\r\n  suffix: string;\r\n  prefix: string;\r\n  thousandSeparator: string;\r\n  decimalMarker: '.' | ',';\r\n  clearIfNotMatch: boolean;\r\n  showTemplate: boolean;\r\n  showMaskTyped: boolean;\r\n  placeHolderCharacter: string;\r\n  shownMaskExpression: string;\r\n  dropSpecialCharacters: boolean | string[];\r\n  specialCharacters: string[];\r\n  hiddenInput: boolean | undefined;\r\n  validation: boolean;\r\n  separatorLimit: string;\r\n  allowNegativeNumbers: boolean;\r\n  leadZeroDateTime: boolean;\r\n  patterns: {\r\n    [character: string]: {\r\n      pattern: RegExp;\r\n      optional?: boolean;\r\n      symbol?: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport type optionsConfig = Partial<IConfig>;\r\nexport const config: InjectionToken<IConfig> = new InjectionToken('config');\r\nexport const NEW_CONFIG: InjectionToken<IConfig> = new InjectionToken('NEW_CONFIG');\r\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\r\n\r\nexport const initialConfig: IConfig = {\r\n  suffix: '',\r\n  prefix: '',\r\n  thousandSeparator: ' ',\r\n  decimalMarker: '.',\r\n  clearIfNotMatch: false,\r\n  showTemplate: false,\r\n  showMaskTyped: false,\r\n  placeHolderCharacter: '_',\r\n  dropSpecialCharacters: true,\r\n  hiddenInput: undefined,\r\n  shownMaskExpression: '',\r\n  separatorLimit: '',\r\n  allowNegativeNumbers: false,\r\n  validation: true,\r\n  // tslint:disable-next-line: quotemark\r\n  specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\r\n  leadZeroDateTime: false,\r\n  patterns: {\r\n    '0': {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    '9': {\r\n      pattern: new RegExp('\\\\d'),\r\n      optional: true,\r\n    },\r\n    X: {\r\n      pattern: new RegExp('\\\\d'),\r\n      symbol: '*',\r\n    },\r\n    A: {\r\n      pattern: new RegExp('[a-zA-Z0-9]'),\r\n    },\r\n    S: {\r\n      pattern: new RegExp('[a-zA-Z]'),\r\n    },\r\n    d: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    m: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    M: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    H: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    h: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n    s: {\r\n      pattern: new RegExp('\\\\d'),\r\n    },\r\n  },\r\n};\r\n\r\nexport const timeMasks: string[] = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\r\n\r\nexport const withoutValidation: string[] = [\r\n  'percent',\r\n  'Hh',\r\n  's0',\r\n  'm0',\r\n  'separator',\r\n  'd0/M0/0000',\r\n  'd0/M0',\r\n  'd0',\r\n  'M0',\r\n];\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { config, IConfig } from './config';\r\n\r\n@Injectable()\r\nexport class MaskApplierService {\r\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\r\n  public hiddenInput: IConfig['hiddenInput'];\r\n  public showTemplate!: IConfig['showTemplate'];\r\n  public clearIfNotMatch!: IConfig['clearIfNotMatch'];\r\n  public maskExpression: string = '';\r\n  public actualValue: string = '';\r\n  public shownMaskExpression: string = '';\r\n  public maskSpecialCharacters!: IConfig['specialCharacters'];\r\n  public maskAvailablePatterns!: IConfig['patterns'];\r\n  public prefix!: IConfig['prefix'];\r\n  public suffix!: IConfig['suffix'];\r\n  public thousandSeparator!: IConfig['thousandSeparator'];\r\n  public decimalMarker!: IConfig['decimalMarker'];\r\n  public customPattern!: IConfig['patterns'];\r\n  public ipError?: boolean;\r\n  public cpfCnpjError?: boolean;\r\n  public showMaskTyped!: IConfig['showMaskTyped'];\r\n  public placeHolderCharacter!: IConfig['placeHolderCharacter'];\r\n  public validation: IConfig['validation'];\r\n  public separatorLimit: IConfig['separatorLimit'];\r\n  public allowNegativeNumbers: IConfig['allowNegativeNumbers'];\r\n  public leadZeroDateTime: IConfig['leadZeroDateTime'];\r\n\r\n  private _shift!: Set<number>;\r\n\r\n  public constructor(@Inject(config) protected _config: IConfig) {\r\n    this._shift = new Set();\r\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\r\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\r\n    this.maskSpecialCharacters = this._config.specialCharacters;\r\n    this.maskAvailablePatterns = this._config.patterns;\r\n    this.prefix = this._config.prefix;\r\n    this.suffix = this._config.suffix;\r\n    this.thousandSeparator = this._config.thousandSeparator;\r\n    this.decimalMarker = this._config.decimalMarker;\r\n    this.hiddenInput = this._config.hiddenInput;\r\n    this.showMaskTyped = this._config.showMaskTyped;\r\n    this.placeHolderCharacter = this._config.placeHolderCharacter;\r\n    this.validation = this._config.validation;\r\n    this.separatorLimit = this._config.separatorLimit;\r\n    this.allowNegativeNumbers = this._config.allowNegativeNumbers;\r\n    this.leadZeroDateTime = this._config.leadZeroDateTime;\r\n  }\r\n\r\n  public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\r\n    const [mask, customPattern] = maskAndPattern;\r\n    this.customPattern = customPattern;\r\n    return this.applyMask(inputValue, mask);\r\n  }\r\n\r\n  public applyMask(\r\n    inputValue: string,\r\n    maskExpression: string,\r\n    position: number = 0,\r\n    justPasted: boolean = false,\r\n    backspaced: boolean = false,\r\n    cb: Function = () => {}\r\n  ): string {\r\n    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\r\n      return '';\r\n    }\r\n    let cursor = 0;\r\n    let result = '';\r\n    let multi = false;\r\n    let backspaceShift = false;\r\n    let shift = 1;\r\n    let stepBack = false;\r\n    if (inputValue.slice(0, this.prefix.length) === this.prefix) {\r\n      inputValue = inputValue.slice(this.prefix.length, inputValue.length);\r\n    }\r\n    if (!!this.suffix && inputValue?.length > 0) {\r\n      inputValue = this.checkAndRemoveSuffix(inputValue);\r\n    }\r\n    const inputArray: string[] = inputValue.toString().split('');\r\n    if (maskExpression === 'IP') {\r\n      this.ipError = !!(inputArray.filter((i: string) => i === '.').length < 3 && inputArray.length < 7);\r\n      maskExpression = '099.099.099.099';\r\n    }\r\n    const arr: string[] = [];\r\n    for (let i = 0; i < inputValue.length; i++) {\r\n      if (inputValue[i].match('\\\\d')) {\r\n        arr.push(inputValue[i]);\r\n      }\r\n    }\r\n    if (maskExpression === 'CPF_CNPJ') {\r\n      this.cpfCnpjError = !!(arr.length !== 11 && arr.length !== 14);\r\n      if (arr.length > 11) {\r\n        maskExpression = '00.000.000/0000-00';\r\n      } else {\r\n        maskExpression = '000.000.000-00';\r\n      }\r\n    }\r\n    if (maskExpression.startsWith('percent')) {\r\n      if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\r\n        inputValue = this._stripToDecimal(inputValue);\r\n        const precision: number = this.getPrecision(maskExpression);\r\n        inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\r\n      }\r\n      if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\r\n        const base: string = inputValue.substring(0, inputValue.indexOf('.') - 1);\r\n        inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\r\n      }\r\n      if (this.percentage(inputValue)) {\r\n        result = inputValue;\r\n      } else {\r\n        result = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n    } else if (maskExpression.startsWith('separator')) {\r\n      if (\r\n        inputValue.match('[wа-яА-Я]') ||\r\n        inputValue.match('[ЁёА-я]') ||\r\n        inputValue.match('[a-z]|[A-Z]') ||\r\n        inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\r\n        inputValue.match('[^A-Za-z0-9,]')\r\n      ) {\r\n        inputValue = this._stripToDecimal(inputValue);\r\n      }\r\n\r\n      inputValue =\r\n        inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker\r\n          ? inputValue.slice(1, inputValue.length)\r\n          : inputValue;\r\n\r\n      // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\r\n      //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\r\n\r\n      const thousandSeperatorCharEscaped: string = this._charToRegExpExpression(this.thousandSeparator);\r\n      const decimalMarkerEscaped: string = this._charToRegExpExpression(this.decimalMarker);\r\n      const invalidChars: string = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'\r\n        .replace(thousandSeperatorCharEscaped, '')\r\n        .replace(decimalMarkerEscaped, '');\r\n\r\n      const invalidCharRegexp: RegExp = new RegExp('[' + invalidChars + ']');\r\n\r\n      if (inputValue.match(invalidCharRegexp)) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n\r\n      const precision: number = this.getPrecision(maskExpression);\r\n      inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\r\n      const strForSep: string = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\r\n      result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\r\n\r\n      const commaShift: number = result.indexOf(',') - inputValue.indexOf(',');\r\n      const shiftStep: number = result.length - inputValue.length;\r\n\r\n      if (shiftStep > 0 && result[position] !== ',') {\r\n        backspaceShift = true;\r\n        let _shift = 0;\r\n        do {\r\n          this._shift.add(position + _shift);\r\n          _shift++;\r\n        } while (_shift < shiftStep);\r\n      } else if (\r\n        (commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\r\n        (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)\r\n      ) {\r\n        this._shift.clear();\r\n        backspaceShift = true;\r\n        shift = shiftStep;\r\n        position += shiftStep;\r\n        this._shift.add(position);\r\n      } else {\r\n        this._shift.clear();\r\n      }\r\n    } else {\r\n      for (\r\n        // tslint:disable-next-line\r\n        let i: number = 0, inputSymbol: string = inputArray[0];\r\n        i < inputArray.length;\r\n        i++, inputSymbol = inputArray[i]\r\n      ) {\r\n        if (cursor === maskExpression.length) {\r\n          break;\r\n        }\r\n        if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\r\n          result += inputSymbol;\r\n          cursor += 2;\r\n        } else if (\r\n          maskExpression[cursor + 1] === '*' &&\r\n          multi &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n          multi = false;\r\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\r\n          result += inputSymbol;\r\n          multi = true;\r\n        } else if (\r\n          maskExpression[cursor + 1] === '?' &&\r\n          this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\r\n        ) {\r\n          result += inputSymbol;\r\n          cursor += 3;\r\n        } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\r\n          if (maskExpression[cursor] === 'H') {\r\n            if (Number(inputSymbol) > 2) {\r\n              cursor += 1;\r\n              this._shiftStep(maskExpression, cursor, inputArray.length);\r\n              i--;\r\n              if (this.leadZeroDateTime) {\r\n                result += '0';\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'h') {\r\n            if (result === '2' && Number(inputSymbol) > 3) {\r\n              cursor += 1;\r\n              i--;\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'm') {\r\n            if (Number(inputSymbol) > 5) {\r\n              cursor += 1;\r\n              this._shiftStep(maskExpression, cursor, inputArray.length);\r\n              i--;\r\n              if (this.leadZeroDateTime) {\r\n                result += '0';\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 's') {\r\n            if (Number(inputSymbol) > 5) {\r\n              cursor += 1;\r\n              this._shiftStep(maskExpression, cursor, inputArray.length);\r\n              i--;\r\n              if (this.leadZeroDateTime) {\r\n                result += '0';\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          const daysCount = 31;\r\n          if (maskExpression[cursor] === 'd') {\r\n            if (\r\n              (Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\r\n              Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\r\n              inputValue[cursor + 1] === '/'\r\n            ) {\r\n              cursor += 1;\r\n              this._shiftStep(maskExpression, cursor, inputArray.length);\r\n              i--;\r\n              if (this.leadZeroDateTime) {\r\n                result += '0';\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (maskExpression[cursor] === 'M') {\r\n            const monthsCount = 12;\r\n            // mask without day\r\n            const withoutDays: boolean =\r\n              cursor === 0 &&\r\n              (Number(inputSymbol) > 2 ||\r\n                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\r\n                inputValue[cursor + 1] === '/');\r\n            // day<10 && month<12 for input\r\n            const day1monthInput: boolean =\r\n              inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\r\n              ((inputValue[cursor - 2] === '/' &&\r\n                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\r\n                inputValue[cursor] !== '/') ||\r\n                inputValue[cursor] === '/' ||\r\n                (inputValue[cursor - 3] === '/' &&\r\n                  Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\r\n                  inputValue[cursor - 1] !== '/') ||\r\n                inputValue[cursor - 1] === '/');\r\n            // 10<day<31 && month<12 for input\r\n            const day2monthInput: boolean =\r\n              Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\r\n              !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\r\n              inputValue[cursor - 1] === '/' &&\r\n              (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\r\n            // day<10 && month<12 for paste whole data\r\n            const day1monthPaste: boolean =\r\n              Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\r\n              !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\r\n              !inputValue.slice(cursor - 2, cursor).includes('/') &&\r\n              Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\r\n            // 10<day<31 && month<12 for paste whole data\r\n            const day2monthPaste: boolean =\r\n              Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\r\n              !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\r\n              inputValue[cursor - 1] !== '/' &&\r\n              Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\r\n\r\n            if (\r\n              (Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\r\n              withoutDays ||\r\n              day1monthInput ||\r\n              day2monthInput ||\r\n              day1monthPaste ||\r\n              day2monthPaste\r\n            ) {\r\n              cursor += 1;\r\n              this._shiftStep(maskExpression, cursor, inputArray.length);\r\n              i--;\r\n              if (this.leadZeroDateTime) {\r\n                result += '0';\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          result += inputSymbol;\r\n          cursor++;\r\n        } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\r\n          result += maskExpression[cursor];\r\n          cursor++;\r\n          this._shiftStep(maskExpression, cursor, inputArray.length);\r\n          i--;\r\n        } else if (\r\n          this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]] &&\r\n          this.maskAvailablePatterns[maskExpression[cursor]].optional\r\n        ) {\r\n          if (\r\n            !!inputArray[cursor] &&\r\n            maskExpression !== '099.099.099.099' &&\r\n            maskExpression !== '000.000.000-00' &&\r\n            maskExpression !== '00.000.000/0000-00'\r\n          ) {\r\n            result += inputArray[cursor];\r\n          }\r\n          cursor++;\r\n          i--;\r\n        } else if (\r\n          this.maskExpression[cursor + 1] === '*' &&\r\n          this._findSpecialChar(this.maskExpression[cursor + 2]) &&\r\n          this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\r\n          multi\r\n        ) {\r\n          cursor += 3;\r\n          result += inputSymbol;\r\n        } else if (\r\n          this.maskExpression[cursor + 1] === '?' &&\r\n          this._findSpecialChar(this.maskExpression[cursor + 2]) &&\r\n          this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\r\n          multi\r\n        ) {\r\n          cursor += 3;\r\n          result += inputSymbol;\r\n        } else if (\r\n          this.showMaskTyped &&\r\n          this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\r\n          inputSymbol !== this.placeHolderCharacter\r\n        ) {\r\n          stepBack = true;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      result.length + 1 === maskExpression.length &&\r\n      this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1\r\n    ) {\r\n      result += maskExpression[maskExpression.length - 1];\r\n    }\r\n\r\n    let newPosition: number = position + 1;\r\n\r\n    while (this._shift.has(newPosition)) {\r\n      shift++;\r\n      newPosition++;\r\n    }\r\n\r\n    let actualShift: number = justPasted ? cursor : this._shift.has(position) ? shift : 0;\r\n    if (stepBack) {\r\n      actualShift--;\r\n    }\r\n\r\n    cb(actualShift, backspaceShift);\r\n    if (shift < 0) {\r\n      this._shift.clear();\r\n    }\r\n    let onlySpecial = false;\r\n    if (backspaced) {\r\n      onlySpecial = inputArray.every((char) => this.maskSpecialCharacters.includes(char));\r\n    }\r\n    let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\r\n    if (result.length === 0) {\r\n      res = `${this.prefix}${result}`;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  public _findSpecialChar(inputSymbol: string): undefined | string {\r\n    return this.maskSpecialCharacters.find((val: string) => val === inputSymbol);\r\n  }\r\n\r\n  protected _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\r\n    this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\r\n    return (\r\n      this.maskAvailablePatterns[maskSymbol] &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern &&\r\n      this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)\r\n    );\r\n  }\r\n\r\n  private _formatWithSeparators = (\r\n    str: string,\r\n    thousandSeparatorChar: string,\r\n    decimalChar: string,\r\n    precision: number\r\n  ) => {\r\n    const x: string[] = str.split(decimalChar);\r\n    const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\r\n    let res: string = x[0];\r\n    const separatorLimit: string = this.separatorLimit.replace(/\\s/g, '');\r\n    if (separatorLimit && +separatorLimit) {\r\n      if (res[0] === '-') {\r\n        res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\r\n      } else {\r\n        res = res.slice(0, separatorLimit.length);\r\n      }\r\n    }\r\n    const rgx: RegExp = /(\\d+)(\\d{3})/;\r\n\r\n    while (thousandSeparatorChar && rgx.test(res)) {\r\n      res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\r\n    }\r\n\r\n    if (precision === undefined) {\r\n      return res + decimals;\r\n    } else if (precision === 0) {\r\n      return res;\r\n    }\r\n    return res + decimals.substr(0, precision + 1);\r\n  };\r\n\r\n  private percentage = (str: string): boolean => {\r\n    return Number(str) >= 0 && Number(str) <= 100;\r\n  };\r\n\r\n  private getPrecision = (maskExpression: string): number => {\r\n    const x: string[] = maskExpression.split('.');\r\n    if (x.length > 1) {\r\n      return Number(x[x.length - 1]);\r\n    }\r\n\r\n    return Infinity;\r\n  };\r\n\r\n  private checkAndRemoveSuffix = (inputValue: string): string => {\r\n    for (let i = this.suffix?.length - 1; i >= 0; i--) {\r\n      const substr = this.suffix.substr(i, this.suffix?.length);\r\n      if (\r\n        inputValue.includes(substr) &&\r\n        (i - 1 < 0 || !inputValue.includes(this.suffix.substr(i - 1, this.suffix?.length)))\r\n      ) {\r\n        return inputValue.replace(substr, '');\r\n      }\r\n    }\r\n    return inputValue;\r\n  };\r\n\r\n  private checkInputPrecision = (\r\n    inputValue: string,\r\n    precision: number,\r\n    decimalMarker: IConfig['decimalMarker']\r\n  ): string => {\r\n    if (precision < Infinity) {\r\n      const precisionRegEx: RegExp = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\r\n\r\n      const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\r\n      if (precisionMatch && precisionMatch[0].length - 1 > precision) {\r\n        const diff = precisionMatch[0].length - 1 - precision;\r\n        inputValue = inputValue.substring(0, inputValue.length - diff);\r\n      }\r\n      if (precision === 0 && inputValue.endsWith(decimalMarker)) {\r\n        inputValue = inputValue.substring(0, inputValue.length - 1);\r\n      }\r\n    }\r\n    return inputValue;\r\n  };\r\n\r\n  private _stripToDecimal(str: string): string {\r\n    return str\r\n      .split('')\r\n      .filter((i: string, idx: number) => {\r\n        return (\r\n          i.match('^-?\\\\d') ||\r\n          i.match('\\\\s') ||\r\n          i === '.' ||\r\n          i === ',' ||\r\n          (i === '-' && idx === 0 && this.allowNegativeNumbers)\r\n        );\r\n      })\r\n      .join('');\r\n  }\r\n\r\n  private _charToRegExpExpression(char: string): string {\r\n    if (char) {\r\n      const charsToEscape = '[\\\\^$.|?*+()';\r\n      return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\r\n    }\r\n    return char;\r\n  }\r\n\r\n  private _shiftStep(maskExpression: string, cursor: number, inputLength: number) {\r\n    const shiftStep: number = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputLength : cursor;\r\n    this._shift.add(shiftStep + this.prefix.length || 0);\r\n  }\r\n}\r\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { config, IConfig } from './config';\r\nimport { MaskApplierService } from './mask-applier.service';\r\n\r\n@Injectable()\r\nexport class MaskService extends MaskApplierService {\r\n  public maskExpression: string = '';\r\n  public isNumberValue: boolean = false;\r\n  public placeHolderCharacter: string = '_';\r\n  public maskIsShown: string = '';\r\n  public selStart: number | null = null;\r\n  public selEnd: number | null = null;\r\n\r\n  /**\r\n   * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\r\n   * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\r\n   */\r\n  public writingValue: boolean = false;\r\n\r\n  public onChange = (_: any) => {};\r\n\r\n  public constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    @Inject(config) protected _config: IConfig,\r\n    private _elementRef: ElementRef,\r\n    private _renderer: Renderer2\r\n  ) {\r\n    super(_config);\r\n  }\r\n\r\n  // tslint:disable-next-line:cyclomatic-complexity\r\n  public applyMask(\r\n    inputValue: string,\r\n    maskExpression: string,\r\n    position: number = 0,\r\n    justPasted = false,\r\n    backspaced = false,\r\n    cb: Function = () => {}\r\n  ): string {\r\n    if (!maskExpression) {\r\n      return inputValue;\r\n    }\r\n    this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\r\n    if (this.maskExpression === 'IP' && this.showMaskTyped) {\r\n      this.maskIsShown = this.showMaskInInput(inputValue || '#');\r\n    }\r\n    if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\r\n      this.maskIsShown = this.showMaskInInput(inputValue || '#');\r\n    }\r\n    if (!inputValue && this.showMaskTyped) {\r\n      this.formControlResult(this.prefix);\r\n      return this.prefix + this.maskIsShown;\r\n    }\r\n    const getSymbol: string = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\r\n    let newInputValue = '';\r\n    if (this.hiddenInput && !this.writingValue) {\r\n      let actualResult: string[] = this.actualValue.split('');\r\n      // tslint:disable no-unused-expression\r\n      inputValue !== '' && actualResult.length\r\n        ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\r\n          ? inputValue.length > actualResult.length\r\n            ? actualResult.splice(this.selStart, 0, getSymbol)\r\n            : inputValue.length < actualResult.length\r\n            ? actualResult.length - inputValue.length === 1\r\n              ? actualResult.splice(this.selStart - 1, 1)\r\n              : actualResult.splice(this.selStart, this.selEnd - this.selStart)\r\n            : null\r\n          : null\r\n        : (actualResult = []);\r\n      // tslint:enable no-unused-expression\r\n      newInputValue =\r\n        this.actualValue.length && actualResult.length <= inputValue.length\r\n          ? this.shiftTypedSymbols(actualResult.join(''))\r\n          : inputValue;\r\n    }\r\n    newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\r\n    const result: string = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\r\n    this.actualValue = this.getActualValue(result);\r\n\r\n    // handle some separator implications:\r\n    // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\r\n    if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\r\n      this.decimalMarker = ',';\r\n    }\r\n\r\n    // b) remove decimal marker from list of special characters to mask\r\n    if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\r\n      this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== this.decimalMarker);\r\n    }\r\n\r\n    this.formControlResult(result);\r\n\r\n    if (!this.showMaskTyped) {\r\n      if (this.hiddenInput) {\r\n        return result && result.length ? this.hideInput(result, this.maskExpression) : result;\r\n      }\r\n      return result;\r\n    }\r\n    const resLen: number = result.length;\r\n    const prefNmask: string = this.prefix + this.maskIsShown;\r\n\r\n    if (this.maskExpression.includes('H')) {\r\n      const countSkipedSymbol = this._numberSkipedSymbols(result);\r\n      return result + prefNmask.slice(resLen + countSkipedSymbol);\r\n    } else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\r\n      return result + prefNmask;\r\n    }\r\n    return result + prefNmask.slice(resLen);\r\n  }\r\n\r\n  // get the number of characters that were shifted\r\n  private _numberSkipedSymbols(value: string): number {\r\n    const regex = /(^|\\D)(\\d\\D)/g;\r\n    let match = regex.exec(value);\r\n    let countSkipedSymbol = 0;\r\n    while (match != null) {\r\n      countSkipedSymbol += 1;\r\n      match = regex.exec(value);\r\n    }\r\n    return countSkipedSymbol;\r\n  }\r\n\r\n  public applyValueChanges(\r\n    position: number = 0,\r\n    justPasted: boolean,\r\n    backspaced: boolean,\r\n    cb: Function = () => {}\r\n  ): void {\r\n    const formElement = this._elementRef.nativeElement;\r\n    formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\r\n    if (formElement === this.document.activeElement) {\r\n      return;\r\n    }\r\n    this.clearIfNotMatchFn();\r\n  }\r\n\r\n  public hideInput(inputValue: string, maskExpression: string): string {\r\n    return inputValue\r\n      .split('')\r\n      .map((curr: string, index: number) => {\r\n        if (\r\n          this.maskAvailablePatterns &&\r\n          this.maskAvailablePatterns[maskExpression[index]] &&\r\n          this.maskAvailablePatterns[maskExpression[index]].symbol\r\n        ) {\r\n          return this.maskAvailablePatterns[maskExpression[index]].symbol;\r\n        }\r\n        return curr;\r\n      })\r\n      .join('');\r\n  }\r\n\r\n  // this function is not necessary, it checks result against maskExpression\r\n  public getActualValue(res: string): string {\r\n    const compare: string[] = res\r\n      .split('')\r\n      .filter(\r\n        (symbol: string, i: number) =>\r\n          this._checkSymbolMask(symbol, this.maskExpression[i]) ||\r\n          (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i])\r\n      );\r\n    if (compare.join('') === res) {\r\n      return compare.join('');\r\n    }\r\n    return res;\r\n  }\r\n\r\n  public shiftTypedSymbols(inputValue: string): string {\r\n    let symbolToReplace = '';\r\n    const newInputValue: string[] =\r\n      (inputValue &&\r\n        inputValue.split('').map((currSymbol: string, index: number) => {\r\n          if (\r\n            this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\r\n            inputValue[index + 1] !== this.maskExpression[index + 1]\r\n          ) {\r\n            symbolToReplace = currSymbol;\r\n            return inputValue[index + 1];\r\n          }\r\n          if (symbolToReplace.length) {\r\n            const replaceSymbol: string = symbolToReplace;\r\n            symbolToReplace = '';\r\n            return replaceSymbol;\r\n          }\r\n          return currSymbol;\r\n        })) ||\r\n      [];\r\n    return newInputValue.join('');\r\n  }\r\n\r\n  public showMaskInInput(inputVal?: string): string {\r\n    if (this.showMaskTyped && !!this.shownMaskExpression) {\r\n      if (this.maskExpression.length !== this.shownMaskExpression.length) {\r\n        throw new Error('Mask expression must match mask placeholder length');\r\n      } else {\r\n        return this.shownMaskExpression;\r\n      }\r\n    } else if (this.showMaskTyped) {\r\n      if (inputVal) {\r\n        if (this.maskExpression === 'IP') {\r\n          return this._checkForIp(inputVal);\r\n        }\r\n        if (this.maskExpression === 'CPF_CNPJ') {\r\n          return this._checkForCpfCnpj(inputVal);\r\n        }\r\n      }\r\n      return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public clearIfNotMatchFn(): void {\r\n    const formElement = this._elementRef.nativeElement;\r\n    if (\r\n      this.clearIfNotMatch &&\r\n      this.prefix.length + this.maskExpression.length + this.suffix.length !==\r\n        formElement.value.replace(/_/g, '').length\r\n    ) {\r\n      this.formElementProperty = ['value', ''];\r\n      this.applyMask(formElement.value, this.maskExpression);\r\n    }\r\n  }\r\n\r\n  public set formElementProperty([name, value]: [string, string | boolean]) {\r\n    Promise.resolve().then(() => this._renderer.setProperty(this._elementRef.nativeElement, name, value));\r\n  }\r\n\r\n  public checkSpecialCharAmount(mask: string): number {\r\n    const chars: string[] = mask.split('').filter((item: string) => this._findSpecialChar(item));\r\n    return chars.length;\r\n  }\r\n\r\n  public removeMask(inputValue: string): string {\r\n    return this._removeMask(\r\n      this._removeSuffix(this._removePrefix(inputValue)),\r\n      this.maskSpecialCharacters.concat('_').concat(this.placeHolderCharacter)\r\n    );\r\n  }\r\n\r\n  private _checkForIp(inputVal: string): string {\r\n    if (inputVal === '#') {\r\n      return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\r\n    }\r\n    const arr: string[] = [];\r\n    for (let i = 0; i < inputVal.length; i++) {\r\n      if (inputVal[i].match('\\\\d')) {\r\n        arr.push(inputVal[i]);\r\n      }\r\n    }\r\n    if (arr.length <= 3) {\r\n      return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\r\n    }\r\n    if (arr.length > 3 && arr.length <= 6) {\r\n      return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\r\n    }\r\n    if (arr.length > 6 && arr.length <= 9) {\r\n      return this.placeHolderCharacter;\r\n    }\r\n    if (arr.length > 9 && arr.length <= 12) {\r\n      return '';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private _checkForCpfCnpj(inputVal: string): string {\r\n    const cpf =\r\n      `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\r\n    const cnpj =\r\n      `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\r\n      `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\r\n\r\n    if (inputVal === '#') {\r\n      return cpf;\r\n    }\r\n    const arr: string[] = [];\r\n    for (let i = 0; i < inputVal.length; i++) {\r\n      if (inputVal[i].match('\\\\d')) {\r\n        arr.push(inputVal[i]);\r\n      }\r\n    }\r\n    if (arr.length <= 3) {\r\n      return cpf.slice(arr.length, cpf.length);\r\n    }\r\n    if (arr.length > 3 && arr.length <= 6) {\r\n      return cpf.slice(arr.length + 1, cpf.length);\r\n    }\r\n    if (arr.length > 6 && arr.length <= 9) {\r\n      return cpf.slice(arr.length + 2, cpf.length);\r\n    }\r\n    if (arr.length > 9 && arr.length < 11) {\r\n      return cpf.slice(arr.length + 3, cpf.length);\r\n    }\r\n    if (arr.length === 11) {\r\n      return '';\r\n    }\r\n    if (arr.length === 12) {\r\n      if (inputVal.length === 17) {\r\n        return cnpj.slice(16, cnpj.length);\r\n      }\r\n      return cnpj.slice(15, cnpj.length);\r\n    }\r\n    if (arr.length > 12 && arr.length <= 14) {\r\n      return cnpj.slice(arr.length + 4, cnpj.length);\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\r\n   * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\r\n   * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\r\n   * model value too. Therefore, we don't trigger onChange in this scenario.\r\n   * @param inputValue the current form input value\r\n   */\r\n  private formControlResult(inputValue: string): void {\r\n    if (this.writingValue) {\r\n      return;\r\n    }\r\n    if (Array.isArray(this.dropSpecialCharacters)) {\r\n      this.onChange(\r\n        this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters))\r\n      );\r\n    } else if (this.dropSpecialCharacters) {\r\n      this.onChange(this._toNumber(this._checkSymbols(inputValue)));\r\n    } else {\r\n      this.onChange(this._removeSuffix(inputValue));\r\n    }\r\n  }\r\n\r\n  private _toNumber(value: string | number | undefined | null) {\r\n    if (!this.isNumberValue || value === '') {\r\n      return value;\r\n    }\r\n    const num = Number(value);\r\n    return Number.isNaN(num) ? value : num;\r\n  }\r\n\r\n  private _removeMask(value: string, specialCharactersForRemove: string[]): string {\r\n    return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\r\n  }\r\n\r\n  private _removePrefix(value: string): string {\r\n    if (!this.prefix) {\r\n      return value;\r\n    }\r\n    return value ? value.replace(this.prefix, '') : value;\r\n  }\r\n\r\n  private _removeSuffix(value: string): string {\r\n    if (!this.suffix) {\r\n      return value;\r\n    }\r\n    return value ? value.replace(this.suffix, '') : value;\r\n  }\r\n\r\n  private _retrieveSeparatorValue(result: string): string {\r\n    return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\r\n  }\r\n\r\n  private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\r\n    return new RegExp(specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'), 'gi');\r\n  }\r\n\r\n  private _checkSymbols(result: string): string | number | undefined | null {\r\n    if (result === '') {\r\n      return result;\r\n    }\r\n\r\n    const separatorPrecision: number | null = this._retrieveSeparatorPrecision(this.maskExpression);\r\n    let separatorValue: string = this._retrieveSeparatorValue(result);\r\n    if (this.decimalMarker !== '.') {\r\n      separatorValue = separatorValue.replace(this.decimalMarker, '.');\r\n    }\r\n\r\n    if (!this.isNumberValue) {\r\n      return separatorValue;\r\n    }\r\n    if (separatorPrecision) {\r\n      if (result === this.decimalMarker) {\r\n        return null;\r\n      }\r\n      return this._checkPrecision(this.maskExpression, separatorValue);\r\n    } else {\r\n      return Number(separatorValue);\r\n    }\r\n  }\r\n\r\n  // TODO should think about helpers or separting decimal precision to own property\r\n  private _retrieveSeparatorPrecision(maskExpretion: string): number | null {\r\n    const matcher: RegExpMatchArray | null = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\r\n    return matcher ? Number(matcher[1]) : null;\r\n  }\r\n\r\n  private _checkPrecision(separatorExpression: string, separatorValue: string): number | string {\r\n    if (separatorExpression.indexOf('2') > 0) {\r\n      return Number(separatorValue).toFixed(2);\r\n    }\r\n    return Number(separatorValue);\r\n  }\r\n}\r\n","import {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n} from '@angular/forms';\r\nimport { Directive, forwardRef, HostListener, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { CustomKeyboardEvent } from './custom-keyboard-event';\r\nimport { config, IConfig, timeMasks, withoutValidation } from './config';\r\nimport { MaskService } from './mask.service';\r\n\r\n// tslint:disable deprecation\r\n// tslint:disable no-input-rename\r\n@Directive({\r\n  selector: 'input[mask], textarea[mask]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MaskDirective),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => MaskDirective),\r\n      multi: true,\r\n    },\r\n    MaskService,\r\n  ],\r\n})\r\nexport class MaskDirective implements ControlValueAccessor, OnChanges, Validator {\r\n  @Input('mask') public maskExpression: string = '';\r\n  @Input() public specialCharacters: IConfig['specialCharacters'] = [];\r\n  @Input() public patterns: IConfig['patterns'] = {};\r\n  @Input() public prefix: IConfig['prefix'] = '';\r\n  @Input() public suffix: IConfig['suffix'] = '';\r\n  @Input() public thousandSeparator: IConfig['thousandSeparator'] = ' ';\r\n  @Input() public decimalMarker: IConfig['decimalMarker'] = '.';\r\n  @Input() public dropSpecialCharacters: IConfig['dropSpecialCharacters'] | null = null;\r\n  @Input() public hiddenInput: IConfig['hiddenInput'] | null = null;\r\n  @Input() public showMaskTyped: IConfig['showMaskTyped'] | null = null;\r\n  @Input() public placeHolderCharacter: IConfig['placeHolderCharacter'] | null = null;\r\n  @Input() public shownMaskExpression: IConfig['shownMaskExpression'] | null = null;\r\n  @Input() public showTemplate: IConfig['showTemplate'] | null = null;\r\n  @Input() public clearIfNotMatch: IConfig['clearIfNotMatch'] | null = null;\r\n  @Input() public validation: IConfig['validation'] | null = null;\r\n  @Input() public separatorLimit: IConfig['separatorLimit'] | null = null;\r\n  @Input() public allowNegativeNumbers: IConfig['allowNegativeNumbers'] | null = null;\r\n  @Input() public leadZeroDateTime: IConfig['leadZeroDateTime'] | null = null;\r\n  private _maskValue: string = '';\r\n  private _inputValue!: string;\r\n  private _position: number | null = null;\r\n  private _start!: number;\r\n  private _end!: number;\r\n  private _code!: string;\r\n  private _maskExpressionArray: string[] = [];\r\n  private _justPasted: boolean = false;\r\n\r\n  public constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private _maskService: MaskService,\r\n    @Inject(config) protected _config: IConfig\r\n  ) {}\r\n\r\n  public onChange = (_: any) => {};\r\n  public onTouch = () => {};\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    const {\r\n      maskExpression,\r\n      specialCharacters,\r\n      patterns,\r\n      prefix,\r\n      suffix,\r\n      thousandSeparator,\r\n      decimalMarker,\r\n      dropSpecialCharacters,\r\n      hiddenInput,\r\n      showMaskTyped,\r\n      placeHolderCharacter,\r\n      shownMaskExpression,\r\n      showTemplate,\r\n      clearIfNotMatch,\r\n      validation,\r\n      separatorLimit,\r\n      allowNegativeNumbers,\r\n      leadZeroDateTime,\r\n    } = changes;\r\n    if (maskExpression) {\r\n      this._maskValue = maskExpression.currentValue || '';\r\n      if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\r\n        this._maskExpressionArray = maskExpression.currentValue.split('||').sort((a: string, b: string) => {\r\n          return a.length - b.length;\r\n        });\r\n        this._maskValue = this._maskExpressionArray[0];\r\n        this.maskExpression = this._maskExpressionArray[0];\r\n        this._maskService.maskExpression = this._maskExpressionArray[0];\r\n      }\r\n    }\r\n    if (specialCharacters) {\r\n      if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\r\n        return;\r\n      } else {\r\n        this._maskService.maskSpecialCharacters = specialCharacters.currentValue || [];\r\n      }\r\n    }\r\n    // Only overwrite the mask available patterns if a pattern has actually been passed in\r\n    if (patterns && patterns.currentValue) {\r\n      this._maskService.maskAvailablePatterns = patterns.currentValue;\r\n    }\r\n    if (prefix) {\r\n      this._maskService.prefix = prefix.currentValue;\r\n    }\r\n    if (suffix) {\r\n      this._maskService.suffix = suffix.currentValue;\r\n    }\r\n    if (thousandSeparator) {\r\n      this._maskService.thousandSeparator = thousandSeparator.currentValue;\r\n    }\r\n    if (decimalMarker) {\r\n      this._maskService.decimalMarker = decimalMarker.currentValue;\r\n    }\r\n    if (dropSpecialCharacters) {\r\n      this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\r\n    }\r\n    if (hiddenInput) {\r\n      this._maskService.hiddenInput = hiddenInput.currentValue;\r\n    }\r\n    if (showMaskTyped) {\r\n      this._maskService.showMaskTyped = showMaskTyped.currentValue;\r\n    }\r\n    if (placeHolderCharacter) {\r\n      this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\r\n    }\r\n    if (shownMaskExpression) {\r\n      this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\r\n    }\r\n    if (showTemplate) {\r\n      this._maskService.showTemplate = showTemplate.currentValue;\r\n    }\r\n    if (clearIfNotMatch) {\r\n      this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\r\n    }\r\n    if (validation) {\r\n      this._maskService.validation = validation.currentValue;\r\n    }\r\n    if (separatorLimit) {\r\n      this._maskService.separatorLimit = separatorLimit.currentValue;\r\n    }\r\n    if (allowNegativeNumbers) {\r\n      this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\r\n      if (this._maskService.allowNegativeNumbers) {\r\n        this._maskService.maskSpecialCharacters = this._maskService.maskSpecialCharacters.filter(\r\n          (c: string) => c !== '-'\r\n        );\r\n      }\r\n    }\r\n    if (leadZeroDateTime) {\r\n      this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\r\n    }\r\n    this._applyMask();\r\n  }\r\n\r\n  // tslint:disable-next-line: cyclomatic-complexity\r\n  public validate({ value }: FormControl): ValidationErrors | null {\r\n    if (!this._maskService.validation || !this._maskValue) {\r\n      return null;\r\n    }\r\n    if (this._maskService.ipError) {\r\n      return this._createValidationError(value);\r\n    }\r\n    if (this._maskService.cpfCnpjError) {\r\n      return this._createValidationError(value);\r\n    }\r\n    if (this._maskValue.startsWith('separator')) {\r\n      return null;\r\n    }\r\n    if (withoutValidation.includes(this._maskValue)) {\r\n      return null;\r\n    }\r\n    if (this._maskService.clearIfNotMatch) {\r\n      return null;\r\n    }\r\n    if (timeMasks.includes(this._maskValue)) {\r\n      return this._validateTime(value);\r\n    }\r\n    if (value && value.toString().length >= 1) {\r\n      let counterOfOpt = 0;\r\n      for (const key in this._maskService.maskAvailablePatterns) {\r\n        if (\r\n          this._maskService.maskAvailablePatterns[key].optional &&\r\n          this._maskService.maskAvailablePatterns[key].optional === true\r\n        ) {\r\n          if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\r\n            const opt: string = this._maskValue\r\n              .split('')\r\n              .filter((i: string) => i === key)\r\n              .join('');\r\n            counterOfOpt += opt.length;\r\n          } else if (this._maskValue.indexOf(key) !== -1) {\r\n            counterOfOpt++;\r\n          }\r\n          if (this._maskValue.indexOf(key) !== -1 && value.toString().length >= this._maskValue.indexOf(key)) {\r\n            return null;\r\n          }\r\n          if (counterOfOpt === this._maskValue.length) {\r\n            return null;\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        this._maskValue.indexOf('{') === 1 &&\r\n        value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4\r\n      ) {\r\n        return null;\r\n      }\r\n      if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\r\n        return null;\r\n      } else if (\r\n        (this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\r\n        (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\r\n        this._maskValue.indexOf('{') === 1\r\n      ) {\r\n        return this._createValidationError(value);\r\n      }\r\n      if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\r\n        const length: number = this._maskService.dropSpecialCharacters\r\n          ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\r\n          : this._maskValue.length - counterOfOpt;\r\n        if (value.toString().length < length) {\r\n          return this._createValidationError(value);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  @HostListener('paste')\r\n  public onPaste() {\r\n    this._justPasted = true;\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  public onInput(e: CustomKeyboardEvent): void {\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    this._inputValue = el.value;\r\n\r\n    this._setMask();\r\n\r\n    if (!this._maskValue) {\r\n      this.onChange(el.value);\r\n      return;\r\n    }\r\n    const position: number =\r\n      el.selectionStart === 1\r\n        ? (el.selectionStart as number) + this._maskService.prefix.length\r\n        : (el.selectionStart as number);\r\n    let caretShift = 0;\r\n    let backspaceShift = false;\r\n    this._maskService.applyValueChanges(\r\n      position,\r\n      this._justPasted,\r\n      this._code === 'Backspace',\r\n      (shift: number, _backspaceShift: boolean) => {\r\n        this._justPasted = false;\r\n        caretShift = shift;\r\n        backspaceShift = _backspaceShift;\r\n      }\r\n    );\r\n    // only set the selection if the element is active\r\n    if (this.document.activeElement !== el) {\r\n      return;\r\n    }\r\n    this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\r\n    let positionToApply: number = this._position\r\n      ? this._inputValue.length + position + caretShift\r\n      : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\r\n    if (positionToApply > this._getActualInputLength()) {\r\n      positionToApply = this._getActualInputLength();\r\n    }\r\n    el.setSelectionRange(positionToApply, positionToApply);\r\n    this._position = null;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  public onBlur(): void {\r\n    if (this._maskValue) {\r\n      this._maskService.clearIfNotMatchFn();\r\n    }\r\n    this.onTouch();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onFocus(e: MouseEvent | CustomKeyboardEvent): void {\r\n    if (!this._maskValue) {\r\n      return;\r\n    }\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    const posStart = 0;\r\n    const posEnd = 0;\r\n    if (\r\n      el !== null &&\r\n      el.selectionStart !== null &&\r\n      el.selectionStart === el.selectionEnd &&\r\n      el.selectionStart > this._maskService.prefix.length &&\r\n      // tslint:disable-next-line\r\n      (e as any).keyCode !== 38\r\n    ) {\r\n      if (this._maskService.showMaskTyped) {\r\n        // We are showing the mask in the input\r\n        this._maskService.maskIsShown = this._maskService.showMaskInInput();\r\n        if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\r\n          // the input ONLY contains the mask, so position the cursor at the start\r\n          el.focus();\r\n          el.setSelectionRange(posStart, posEnd);\r\n        } else {\r\n          // the input contains some characters already\r\n          if (el.selectionStart > this._maskService.actualValue.length) {\r\n            // if the user clicked beyond our value's length, position the cursor at the end of our value\r\n            el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const nextValue: string | null =\r\n      !el.value || el.value === this._maskService.prefix\r\n        ? this._maskService.prefix + this._maskService.maskIsShown\r\n        : el.value;\r\n\r\n    /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\r\n    if (el.value !== nextValue) {\r\n      el.value = nextValue;\r\n    }\r\n\r\n    /** fix of cursor position with prefix when mouse click occur */\r\n    if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\r\n      el.selectionStart = this._maskService.prefix.length;\r\n      return;\r\n    }\r\n\r\n    /** select only inserted text */\r\n    if ((el.selectionEnd as number) > this._getActualInputLength()) {\r\n      el.selectionEnd = this._getActualInputLength();\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: cyclomatic-complexity\r\n  @HostListener('keydown', ['$event'])\r\n  public onKeyDown(e: CustomKeyboardEvent): void {\r\n    if (!this._maskValue) {\r\n      return;\r\n    }\r\n    this._code = e.code ? e.code : e.key;\r\n    const el: HTMLInputElement = e.target as HTMLInputElement;\r\n    this._inputValue = el.value;\r\n\r\n    this._setMask();\r\n\r\n    if (e.keyCode === 38) {\r\n      e.preventDefault();\r\n    }\r\n    if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\r\n      if (e.keyCode === 8 && el.value.length === 0) {\r\n        el.selectionStart = el.selectionEnd;\r\n      }\r\n      if (e.keyCode === 8 && (el.selectionStart as number) !== 0) {\r\n        // If specialChars is false, (shouldn't ever happen) then set to the defaults\r\n        this.specialCharacters = this.specialCharacters?.length\r\n          ? this.specialCharacters\r\n          : this._config.specialCharacters;\r\n        if (this.prefix.length > 1 && (el.selectionStart as number) <= this.prefix.length) {\r\n          el.setSelectionRange(this.prefix.length, this.prefix.length);\r\n        } else {\r\n          if (this._inputValue.length !== (el.selectionStart as number) && (el.selectionStart as number) !== 1) {\r\n            while (\r\n              this.specialCharacters.includes(this._inputValue[(el.selectionStart as number) - 1].toString()) &&\r\n              ((this.prefix.length >= 1 && (el.selectionStart as number) > this.prefix.length) ||\r\n                this.prefix.length === 0)\r\n            ) {\r\n              el.setSelectionRange((el.selectionStart as number) - 1, (el.selectionStart as number) - 1);\r\n            }\r\n          }\r\n          this.suffixCheckOnPressDelete(e.keyCode, el);\r\n        }\r\n      }\r\n      this.suffixCheckOnPressDelete(e.keyCode, el);\r\n      if (\r\n        this._maskService.prefix.length &&\r\n        (el.selectionStart as number) <= this._maskService.prefix.length &&\r\n        (el.selectionEnd as number) <= this._maskService.prefix.length\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n      const cursorStart: number | null = el.selectionStart;\r\n      // this.onFocus(e);\r\n      if (\r\n        e.keyCode === 8 &&\r\n        !el.readOnly &&\r\n        cursorStart === 0 &&\r\n        el.selectionEnd === el.value.length &&\r\n        el.value.length !== 0\r\n      ) {\r\n        this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\r\n        this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\r\n      }\r\n    }\r\n    if (\r\n      !!this.suffix &&\r\n      this.suffix.length > 1 &&\r\n      this._inputValue.length - this.suffix.length < (el.selectionStart as number)\r\n    ) {\r\n      el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\r\n    } else if (\r\n      (e.keyCode === 65 && e.ctrlKey === true) || // Ctrl+ A\r\n      (e.keyCode === 65 && e.metaKey === true) // Cmd + A (Mac)\r\n    ) {\r\n      el.setSelectionRange(0, this._getActualInputLength());\r\n      e.preventDefault();\r\n    }\r\n    this._maskService.selStart = el.selectionStart;\r\n    this._maskService.selEnd = el.selectionEnd;\r\n  }\r\n\r\n  /** It writes the value in the input */\r\n  public async writeValue(inputValue: string | number | { value: string | number; disable?: boolean }): Promise<void> {\r\n    if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\r\n      if ('disable' in inputValue) {\r\n        this.setDisabledState(Boolean(inputValue.disable));\r\n      }\r\n      inputValue = inputValue.value;\r\n    }\r\n\r\n    if (inputValue === undefined) {\r\n      inputValue = '';\r\n    }\r\n    if (typeof inputValue === 'number') {\r\n      inputValue = String(inputValue);\r\n      inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\r\n      this._maskService.isNumberValue = true;\r\n    }\r\n\r\n    this._inputValue = inputValue;\r\n    this._setMask();\r\n\r\n    if (\r\n      (inputValue && this._maskService.maskExpression) ||\r\n      (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\r\n    ) {\r\n      // Let the service we know we are writing value so that triggering onChange function wont happen during applyMask\r\n      this._maskService.writingValue = true;\r\n      this._maskService.formElementProperty = [\r\n        'value',\r\n        this._maskService.applyMask(inputValue, this._maskService.maskExpression),\r\n      ];\r\n      // Let the service know we've finished writing value\r\n      this._maskService.writingValue = false;\r\n    } else {\r\n      this._maskService.formElementProperty = ['value', inputValue];\r\n    }\r\n    this._inputValue = inputValue;\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n    this._maskService.onChange = this.onChange;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  public suffixCheckOnPressDelete(keyCode: number, el: HTMLInputElement): void {\r\n    if (keyCode === 46 && this.suffix.length > 0) {\r\n      if (this._inputValue.length - this.suffix.length <= (el.selectionStart as number)) {\r\n        el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\r\n      }\r\n    }\r\n    if (keyCode === 8) {\r\n      if (this.suffix.length > 1 && this._inputValue.length - this.suffix.length < (el.selectionStart as number)) {\r\n        el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\r\n      }\r\n      if (this.suffix.length === 1 && this._inputValue.length === (el.selectionStart as number)) {\r\n        el.setSelectionRange((el.selectionStart as number) - 1, (el.selectionStart as number) - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** It disables the input element */\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this._maskService.formElementProperty = ['disabled', isDisabled];\r\n  }\r\n\r\n  private _repeatPatternSymbols(maskExp: string): string {\r\n    return (\r\n      (maskExp.match(/{[0-9]+}/) &&\r\n        maskExp.split('').reduce((accum: string, currval: string, index: number): string => {\r\n          this._start = currval === '{' ? index : this._start;\r\n\r\n          if (currval !== '}') {\r\n            return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\r\n          }\r\n          this._end = index;\r\n          const repeatNumber: number = Number(maskExp.slice(this._start + 1, this._end));\r\n          const replaceWith: string = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\r\n          return accum + replaceWith;\r\n        }, '')) ||\r\n      maskExp\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _applyMask(): any {\r\n    this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\r\n    this._maskService.formElementProperty = [\r\n      'value',\r\n      this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\r\n    ];\r\n  }\r\n\r\n  private _validateTime(value: string): ValidationErrors | null {\r\n    const rowMaskLen: number = this._maskValue.split('').filter((s: string) => s !== ':').length;\r\n    if (!value) {\r\n      return null; // Don't validate empty values to allow for optional form control\r\n    }\r\n\r\n    if ((+value[value.length - 1] === 0 && value.length < rowMaskLen) || value.length <= rowMaskLen - 2) {\r\n      return this._createValidationError(value);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _getActualInputLength() {\r\n    return (\r\n      this._maskService.actualValue.length || this._maskService.actualValue.length + this._maskService.prefix.length\r\n    );\r\n  }\r\n\r\n  private _createValidationError(actualValue: string): ValidationErrors {\r\n    return {\r\n      mask: {\r\n        requiredMask: this._maskValue,\r\n        actualValue,\r\n      },\r\n    };\r\n  }\r\n\r\n  private _setMask() {\r\n    if (this._maskExpressionArray.length > 0) {\r\n      this._maskExpressionArray.some((mask) => {\r\n        const test = this._inputValue &&\r\n          this._maskService.removeMask(this._inputValue)?.length <= this._maskService.removeMask(mask)?.length;\r\n        if (this._inputValue && test) {\r\n          this._maskValue = mask;\r\n          this.maskExpression = mask;\r\n          this._maskService.maskExpression = mask;\r\n          return test;\r\n        } else {\r\n          this._maskValue = this._maskExpressionArray[this._maskExpressionArray.length - 1];\r\n          this.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\r\n          this._maskService.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { IConfig } from './config';\r\n\r\n@Pipe({\r\n  name: 'mask',\r\n  pure: true,\r\n})\r\nexport class MaskPipe implements PipeTransform {\r\n  public constructor(private _maskService: MaskApplierService) {}\r\n\r\n  public transform(\r\n    value: string | number,\r\n    mask: string | [string, IConfig['patterns']],\r\n    thousandSeparator: string | null = null\r\n  ): string {\r\n    if (!value && typeof value !== 'number') {\r\n      return '';\r\n    }\r\n    if (thousandSeparator) {\r\n      this._maskService.thousandSeparator = thousandSeparator;\r\n    }\r\n    if (typeof mask === 'string') {\r\n      return this._maskService.applyMask(`${value}`, mask);\r\n    }\r\n    return this._maskService.applyMaskWithPattern(`${value}`, mask);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\r\nimport { MaskApplierService } from './mask-applier.service';\r\nimport { MaskDirective } from './mask.directive';\r\nimport { MaskPipe } from './mask.pipe';\r\n\r\n@NgModule({\r\n  exports: [MaskDirective, MaskPipe],\r\n  declarations: [MaskDirective, MaskPipe],\r\n})\r\nexport class NgxMaskModule {\r\n  public static forRoot(configValue?: optionsConfig | (() => optionsConfig)): ModuleWithProviders<NgxMaskModule> {\r\n    return {\r\n      ngModule: NgxMaskModule,\r\n      providers: [\r\n        {\r\n          provide: NEW_CONFIG,\r\n          useValue: configValue,\r\n        },\r\n        {\r\n          provide: INITIAL_CONFIG,\r\n          useValue: initialConfig,\r\n        },\r\n        {\r\n          provide: config,\r\n          useFactory: _configFactory,\r\n          deps: [INITIAL_CONFIG, NEW_CONFIG],\r\n        },\r\n        MaskApplierService,\r\n      ],\r\n    };\r\n  }\r\n  public static forChild(): ModuleWithProviders<NgxMaskModule> {\r\n    return {\r\n      ngModule: NgxMaskModule,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function _configFactory(\r\n  initConfig: optionsConfig,\r\n  configValue: optionsConfig | (() => optionsConfig)\r\n): optionsConfig {\r\n  return configValue instanceof Function ? { ...initConfig, ...configValue() } : { ...initConfig, ...configValue };\r\n}\r\n","// tslint:disable: no-any typedef\r\ndeclare var global: any;\r\n\r\nconst commonjsGlobal =\r\n  typeof globalThis !== 'undefined'\r\n    ? globalThis\r\n    : typeof window !== 'undefined'\r\n    ? window\r\n    : typeof global !== 'undefined'\r\n    ? global\r\n    : typeof self !== 'undefined'\r\n    ? self\r\n    : {};\r\n\r\n(function () {\r\n  if (!commonjsGlobal.KeyboardEvent) {\r\n    commonjsGlobal.KeyboardEvent = function (_eventType: any, _init: any) {};\r\n  }\r\n})();\r\n\r\nexport type CustomKeyboardEvent = KeyboardEvent;\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}